Function Name	Classification	Inputs/Outputs	Classification Details	Classification:  watch out for FILE IO and INTERNAL STATE. As far as i know, all of the funky behavior starts at file IO, and continues through functions that either use file handle integers or depend on internal state started by file IO.  1. NORMAL spkpos-like functions. These play nice with parallelization. They don't permanently** modify any internal state. They can read from internal state variables *as long as* that state wasn't created by TASK_STATEFUL functions  2. CONSTANT clight-like functions. they take no arguments, have no dependence on any state, and return the same thing every time. There are stateless functions with no arguments (like xf2eul), and arg-less functions that use an internal state (like daffna); neither of those count.  3. GLOBAL_STATE_MODIFIER furnish-like functions. (furnish and clpool are the only two I know of.) These are the ones that need to be run on every worker, because future NORMAL functions will depend on the state created by these.  4. TASK_STATEFUL daf-like functions. These modify the internal state in ways that can't be shared between workers. Any functions that depend on this state are also TASK_STATEFUL.    In summary, a NORMAL function "f" can depend on an internal state only if it was created/modified by a GLOBAL_STATEFUL function. If the state was created/modified by a TASK_STATEFUL function, then "f" is actually a TASK_STATEFUL function too.  **they can temporarily modify the workers internal state if that change is undone before the function exits. E.g. pushing and popping the function name on the global error-handler-stack is fine.				Inputs and Outputs:  all of the IO information is found in the documentation at: JNISpice/doc/html/cspice/index.html under the Brief_I/O section for each function.  Of course I is input and O is output; but some docs use I/O to denote both, some use I-O, and some use I,O. They all mean both. I also saw one that used P, and I don't know what that means, so that's fun.  Our format will be a comma-separated lower-case list: i for input, o for output, io for both. Our goal is to convert the IO from the C version to the java version.  FUNKYNESS:  These are the docs for the C functions, and they don't always match the JNI versions we're dealing with. So you don't just have to look at the number of arguments, but also the argument names. Sometimes they're out of order. Sometimes there are C arguments that aren't there in the Java function, and sometimes there are Java args not found in the C version. It sucks.  Functions with "Pl02" in the name are actually renamed in CSPICE to "_pl02".  If you see a C-arg called 'int size' and there's no Java-argument, you can (probably) safely ignore it. If you see a Java-arg called 'int size', you can't ignore it (but it is definitely an input).  If the java argument is a primitive data type, it is always only input.  There is at least one case (i don't remember which, sorry) where an io argument in the C function is split into an input arg and a return value in the Java function. So if you see an io arg, make sure nothing funky is happening with the return types.  There is at least one case (I think xf2eul) where a three-element input array in the Java function is split into three separate arguments for the C function. The only reason I know this is because of the argument names, which is why we have to check them.    Getting this information is going to be nasty and dumb, but if we use it well we could reduce the network overhead by up to half.
axisar	NORMAL	i,i						
b1900	CONSTANT							
b1950	CONSTANT							
badkpv	NORMAL	i,i,i,i,i,i						
bodc2n	NORMAL	i						
bodc2s	NORMAL	i						
bodfnd	NORMAL	i,i						
bodn2c	NORMAL	i						
bods2c	NORMAL	i						
bodvcd	NORMAL	i,i						
ccifrm	NORMAL	i,i,o,o,o,o						
cgv2el	NORMAL	i,i,i						
ckcls	TASK_STATEFUL	i	closes a file handle					
ckcov	NORMAL	i,i,i,i,i,i,i,io						
ckgp	NORMAL	i,i,i,i,o,o,o						
ckgpav	NORMAL	i,i,i,i,o,o,o,o						
ckupf	TASK_STATEFUL	i						
ckmeta	NORMAL	i,i						
ckobj	NORMAL	i,i,i						
ckopn	TASK_STATEFUL	i,i,i						
ckw01	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,i,i						
ckw02	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,i,i,i						
ckw03	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,i,i,i,i						
clight	CONSTANT							
clpool	GLOBAL_STATE_MODIFIER		kernel pool things					
conics	NORMAL	i,i						
convrt	NORMAL	i,i,i						
cvpool	GLOBAL_STATE_MODIFIER	i	kernel pool things					
cyllat	NORMAL	i,i,i						
cylrec	NORMAL	i,i,i						
cylsph	NORMAL	i,i,i						
dafac	TASK_STATEFUL	i,i						
dafbbs	TASK_STATEFUL	i						
dafbfs	TASK_STATEFUL	i						
dafcls	TASK_STATEFUL	i						
dafcs	TASK_STATEFUL	i						
dafdc	TASK_STATEFUL	i						
dafec	TASK_STATEFUL	i,i,i,o,o,o						
daffna	TASK_STATEFUL							
daffpa	TASK_STATEFUL							
dafgda	TASK_STATEFUL	i,i,i						
dafgn	TASK_STATEFUL							
dafgs	TASK_STATEFUL	i						
dafgsr	TASK_STATEFUL	i,i,i,i						
dafopr	TASK_STATEFUL	i						
dafopw	TASK_STATEFUL	i						
dafrcr	TASK_STATEFUL	i,i						
dafrfr	TASK_STATEFUL	i,o,o,o,o,o,o						
dafus	TASK_STATEFUL	i,i,i,o,o						
dascls	TASK_STATEFUL	i	closes a DAS file					
dasac	TASK_STATEFUL	i,i	add comments to DAS file					
dasdc	TASK_STATEFUL	i						
dasec	TASK_STATEFUL	i,i,i,o,o,o						
dashfn	TASK_STATEFUL	i						
dasopr	TASK_STATEFUL	i						
dasopw	TASK_STATEFUL	i						
dasrfr	TASK_STATEFUL	i,i,i,o,o,o,o						
dcyldr	NORMAL	i,i,i						
deltet	NORMAL	i,i						
det	NORMAL	i						
dgeodr	NORMAL	i,i,i,i,i						
dlabbs	TASK_STATEFUL	i,o,o						
dlabfs	TASK_STATEFUL	i,o,o						
dlafns	TASK_STATEFUL	i,i,o,o						
dlafps	TASK_STATEFUL	i,i,o,o						
dlatdr	NORMAL	i,i,i						
dpgrdr	NORMAL	i,i,i,i,i,i						
dpr	CONSTANT							
drdcyl	NORMAL	i,i,i						
drdgeo	NORMAL	i,i,i,i,i						
drdlat	NORMAL	i,i,i						
drdpgr	NORMAL	i,i,i,i,i,i						
drdsph	NORMAL	i,i,i						
dskb02	TASK_STATEFUL	i,i,o,o,o,o,o,o,o,o,o,o,o						
dskd02	TASK_STATEFUL	i,i,i,i,i						
dskgd	TASK_STATEFUL	i,i						
dskgtl	TASK_STATEFUL	i						
dski02	TASK_STATEFUL	i,i,i,i,i						
dskmi2	TASK_STATEFUL****	i,i,i,i,i,i,i,i,i,i,i,i,i	*Has a p parameter value					
dskn02	TASK_STATEFUL	i,i,i						
dskobj	TASK_STATEFUL	i,i,o	*bodids listed as "I-O" in cpsice docs					
dskopn	TASK_STATEFUL	i,i,i						
dskp02	TASK_STATEFUL 	i,i,i,i						
dskrb2	TASK_STATEFUL	i,i,i,i,i,i,o,o						
dskstl	TASK_STATEFUL	i,i						
dsksrf	TASK_STATEFUL	i,i,i,o	srfids is listed as "I-O" in cspice docs					
dskv02	TASK_STATEFUL	i,i,i,i						
dskw02	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i,i						
dskx02	TASK_STATEFUL	i,i,i,i,o,o,o						
dskxsi	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,i,o,o,o,o,o,o,o						
dskxv	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,o,o						
dskz02	TASK_STATEFUL	i,i,o,o						
dsphdr	NORMAL	i,i,i						
dtpool	TASK_STATEFUL	i,o,o,o						
dvcrss	NORMAL	i,i						
dvdot	NORMAL	i,i						
dvhat	NORMAL	i						
dvsep	NORMAL	i,i						
dvpool	GLOBAL_STATE_MODIFIER	i	**COULD THIS BE GLOBAL**? deletes a kernel pool variable					
edlimb	NORMAL	i,i,i,i						
el2cgv	NORMAL	i,o,o,o						
eqstr	NORMAL	i,i						
erract	GLOBAL_STATE_MODIFIER	i,i						
errdev	GLOBAL_STATE_MODIFIER	i,i						
et2lst	NORMAL	i,i,i,i,o,o,o,o,o						
et2utc	NORMAL	i,i,i						
etcal	NORMAL	i						
eul2m	NORMAL	i,i						
eul2xf	NORMAL	i,i						
frinfo	NORMAL	i,o,o,o,o						
frmnam	NORMAL	i						
furnsh	GLOBAL_STATE_MODIFIER	i						
gcpool	NORMAL	i,i,i						
gdpool	NORMAL	i,i,i						
georec	NORMAL	i,i,i,i,i						
getfat	NORMAL	i,o,o						
getfov	NORMAL	i,o,o,o,o,o						
gfbail	NORMAL							
gfclrh	GLOBAL_STATE_MODIFIER							
gfdist	NORMAL	i,i,i,i,i,i,i,i,i						
gfilum	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i,i,i						
gfocce	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i	GFSearchUtils?					
pckcov	NORMAL	i,i,i,i						
pckfrm	NORMAL	i,i,i						
gfoclt	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i	assuming return array has bundled outputs					
gfpa	NORMAL	i,i,i,i,i,i,i,i,i,i						
gfposc	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i						
gfrefn	NORMAL	i,i,i,i						
gfrepf	TASK_STATEFUL							
gfrepi	TASK_STATEFUL	i,i,i						
gfrepu	TASK_STATEFUL	i,i,i						
gfrfov	NORMAL	i,i,i,i,i,i,i,i						
gfrr	NORMAL	i,i,i,i,i,i,i,i,i						
gfsep	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i,i,i						
gfsntc	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i,i,i,i						
gfsstp	GLOBAL_STATE_MODIFIER	i						
gfstep	NORMAL	i						
gfstol	GLOBAL_STATE_MODIFIER	i						
gfsubc	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i,i						
gftfov	NORMAL	i,i,i,i,i,i,i,i,i						
gfuds	NORMAL	i,i,i,i,i,i,i	GFScalarQuantity?					
gipool	NORMAL	i,i,i						
gnpool	NORMAL	i,i,i						
inedpl	NORMAL	i,i,i,i,o,o						
inelpl	NORMAL	i,i,o,o,o						
illumf	NORMAL	i,i,i,i,i,i,i,i,o,o,o,o,o						
illumPl02	NORMAL	i,i,i,i,i,i,i,o,o,o						
ilumin	NORMAL	i,i,i,i,i,i,i,o,o,o						
inrypl	NORMAL	i,i,i,o,o						
invert	NORMAL	i	Invert a 3x3 matrix					
isrot	NORMAL	i,i,i						
j1900	CONSTANT							
j1950	CONSTANT							
j2000	CONSTANT							
j2100	CONSTANT							
jyear	CONSTANT							
kclear	GLOBAL_STATE_MODIFIER		Clear the keeper system and kernel pool. Not 100% sure about this one.					
kdata	NORMAL	i,i,o,o,o,o,o	Return data for the nth kernel that is among a list of specified kernel types.					
kinfo	NORMAL	i,o,o,o,o	Return information about a loaded kernel specified by name.					
ktotal	NORMAL	i	Return the current number of kernels that have been loaded via the KEEPER interface that are of a specified type.					
latcyl	NORMAL	i,i,i						
latrec	NORMAL	i,i,i						
latsph	NORMAL	i,i,i						
latsrf	NORMAL	i,i,i,i,i,i						
ldpool	GLOBAL_STATE_MODIFIER	i	Load the variables contained in a NAIF ASCII kernel file into the kernel pool.					
limbpt	NORMAL	i,i,i,i,i,i,i,i,i,i,i,i,i,o,o,o,o						
limbPl02	NORMAL	i,i,i,i,i,i,i,i,o,o,o,o	Depricated					
llgridPl02	NORMAL	i,i,i,o,o	Depricated					
lmpool	GLOBAL_STATE_MODIFIER	i	Load the variables contained in an internal buffer into the kernel pool. 					
ltime	NORMAL	i,i,i,i,o,o						
m2eul	NORMAL	i,i						
m2q	NORMAL	i						
mxm	NORMAL	i,i						
mxv	NORMAL	i,i						
namfrm			not sure					
npedln	NORMAL	i,i,i,i,i,o,o						
npelpt	NORMAL	i,i,o,o						
nplnpt	NORMAL	i,i,i,o,o						
nvc2pl	NORMAL	i,i						
nvp2pl	NORMAL	i,i						
nearpt	NORMAL	i,i,i,i,o,o						
occult	NORMAL	i,i,i,i,i,i,i,i,i						
oscelt	NORMAL	i,i,i						
oscltx	NORMAL	i,i,i						
pckcls	TASK_STATEFUL	i	PCK, close file					
pckopn	TASK_STATEFUL	i,i,i	Create a new PCK file, returning the handle of the opened file.					
pckuof	TASK_STATEFUL	i	Unload a binary PCK file so that it will no longer be searched by the readers.					
pckw02	TASK_STATEFUL	i,i,i,i,i,i,i,i,i,i,i	Write a type 2 segment to a PCK binary file given the file handle, frame class ID, base frame, time range covered by the segment, and the Chebyshev polynomial coefficients.					
pcpool	GLOBAL_STATE_MODIFIER	i,i	This entry point provides toolkit programmers a method for programmatically inserting character data into the kernel pool. 					
pdpool	GLOBAL_STATE_MODIFIER	i,i	This entry point provides toolkit programmers a method for programmatically inserting double precision data into the kernel pool. 					
pgrrec	NORMAL	i,i,i,i,i,i						
pi	CONSTANT							
pipool	GLOBAL_STATE_MODIFIER	i,i	This entry point provides toolkit programmers a method for programmatically inserting integer data into the kernel pool. 					
pjelpl	NORMAL	i,i						
pl2nvc	NORMAL	i,o,o						
pl2nvp	NORMAL	i,o,o						
pl2psv	NORMAL	i,o,o,o						
pltar	NORMAL	i,i,i,i						
pltexp	NORMAL	i,i						
pltnp	NORMAL	i,i,i,i,o,o						
pltnrm	NORMAL	i,i,i						
pltvol	NORMAL	i,i,i,i						
psv2pl	NORMAL	i,i,i						
putcml	GLOBAL_STATE_MODIFIER	i,i	seems odd					
prompt			seems odd					
prop2b	NORMAL	i,i,i,o						
pxform	NORMAL	i,i,i,o						
pxfrm2	NORMAL	i,i,i,i						
q2m	NORMAL	i						
qdq2av	NORMAL	i,i						
qxq	NORMAL	i,i						
radrec	NORMAL	i,i,i						
rav2xf	NORMAL	i,i						
raxisa	NORMAL	i,o,o						
reccyl	NORMAL	i						
recgeo	NORMAL	i,i,i						
reclat	NORMAL	i						
recpgr	NORMAL	i,i,i,i						
recrad	NORMAL	i						
recsph	NORMAL	i						
reset			dunno					
rotate	NORMAL	i,i						
rotmat	NORMAL	i,i,i						
rotvec	NORMAL	i,i,i						
rpd	CONSTANT							
scdecd	NORMAL	i,i						
sce2c	NORMAL	i,i						
sce2s	NORMAL	i,i						
scencd	NORMAL	i,i						
scfmt	NORMAL	i,i						
scs2e	NORMAL	i,i						
sct2e	NORMAL	i,i						
sctiks	NORMAL	i,i						
sincpt								
spd	CONSTANT							
sphcyl	NORMAL	i,i,i						
sphlat	NORMAL	i,i,i						
sphrec	NORMAL	i,i,i						
spkcls	TASK_STATEFUL	i	closing a file?					
spkcov	NORMAL	i,i,i,i						
spkcpo	NORMAL	i,i,i,i,i,i,i,i,o,o						
spkcpt	NORMAL	i,i,i,i,i,i,i,i,o,o						
spkcvo	NORMAL	i,i,i,i,i,i,i,i,i,o,o						
spkcvt	NORMAL	i,i,i,i,i,i,i,i,i,o,o						
spkezr	NORMAL	i,i,i,i,i,o,o						
spkobj	NORMAL	i,i,i						
spkopn	TASK_STATEFUL	i,i,i						
spkpos	NORMAL	i,i,i,i,i,o,o						
spkuef								
spkw02								
spkw03								
spkw05								
spkw09								
spkw13								
srfc2s								
srfcss								
srfnrm								
srfs2c								
srfscc								
stelab								
stlabx								
stpool								
str2et								
subpnt								
subptPl02								
subslr								
subsolPl02								
surfnm								
surfpt								
swpool								
sxform								
szpool								
termpt								
timout								
tkvrsn								
tparse								
tpictr								
tsetyr								
twovec								
tyear								
ucrss								
unitim								
unload								
unorm								
vcrss								
vdist								
vhat	NORMAL	i						
vnorm								
vperp								
vproj								
vprjp								
vprjpi								
vrotv								
vsep								
wncomd								
wncond								
wndifd								
wnelmd								
wnexpd								
wnextd								
wnfild								
wnfltd								
wnincd								
wninsd								
wnintd								
wnreld								
wnsumd								
wnunid								
wnvald								
xf2eul	NORMAL	i,i,o,o						
xf2rav								
termPl02								